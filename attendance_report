<!DOCTYPE html>
<html lang="zh-Hant">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>出勤管理主控台</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .summary-card { transition: all 0.3s ease; }
        .summary-card:hover { transform: translateY(-5px); box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1); }
        #map { height: 400px; width: 100%; border-radius: 0.5rem; margin-top: 1rem; }
        .modal { display: none; }
        .modal.is-open { display: flex; align-items: center; justify-content: center; }
        .map-error-overlay { background-color: #f3f4f6; color: #6b7280; display: flex; align-items: center; justify-content: center; text-align: center; padding: 2rem; }
    </style>
</head>
<body class="bg-gray-100 text-gray-800">
    <div class="container mx-auto p-4 md:p-8">
        <header class="mb-6 flex justify-between items-center">
            <h1 class="text-3xl font-bold text-gray-700">出勤管理主控台</h1>
            <button id="add-checkin-btn" class="bg-green-600 text-white font-bold py-2 px-4 rounded-md hover:bg-green-700">＋ 手動補打卡</button>
        </header>

        <div class="bg-white p-6 rounded-lg shadow-md mb-6">
            <h2 class="text-xl font-semibold mb-4">查詢條件</h2>
            <div class="grid grid-cols-1 md:grid-cols-4 gap-4 items-end">
                <div>
                    <label for="start-date" class="block text-sm font-medium text-gray-700">開始日期</label>
                    <input type="date" id="start-date" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label for="end-date" class="block text-sm font-medium text-gray-700">結束日期</label>
                    <input type="date" id="end-date" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                </div>
                <div>
                    <label for="employee-select" class="block text-sm font-medium text-gray-700">選擇員工</label>
                    <select id="employee-select" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm">
                        <option value="">所有員工</option>
                    </select>
                </div>
                <button id="query-btn" class="bg-blue-600 text-white font-bold py-2 px-4 rounded-md hover:bg-blue-700">查詢</button>
            </div>
        </div>
        
        <div id="summary-section" class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-6">
            <div class="bg-white p-4 rounded-lg shadow summary-card"><div class="text-sm font-medium text-gray-500">總遲到分鐘數</div><div id="total-late" class="mt-1 text-3xl font-semibold text-yellow-600">0</div></div>
            <div class="bg-white p-4 rounded-lg shadow summary-card"><div class="text-sm font-medium text-gray-500">總早退分鐘數</div><div id="total-early" class="mt-1 text-3xl font-semibold text-blue-600">0</div></div>
            <div id="absent-summary" class="bg-white p-4 rounded-lg shadow summary-card" style="display: none;"><div class="text-sm font-medium text-gray-500">總缺勤天數</div><div id="total-absent" class="mt-1 text-3xl font-semibold text-red-600">0</div></div>
        </div>

        <div id="results-container" class="bg-white p-6 rounded-lg shadow-md">
             <div id="loading-spinner" class="text-center py-10" style="display: none;">載入中...</div>
             <div id="report-table-container"></div>
             <div id="map-container" style="display: none;">
                 <h3 class="text-lg font-semibold mt-4">打卡地圖</h3>
                 <div id="map"></div>
            </div>
        </div>
    </div>
    
    <div id="checkin-modal" class="modal fixed inset-0 bg-gray-600 bg-opacity-50 h-full w-full">
      <div class="relative p-5 border w-full max-w-md shadow-lg rounded-md bg-white">
        <h3 class="text-lg font-semibold">手動補打卡</h3>
        <div class="mt-4 space-y-4">
          <div><label for="modal-employee-select" class="text-sm">員工</label><select id="modal-employee-select" class="mt-1 block w-full rounded-md border-gray-300"></select></div>
          <div><label for="modal-date" class="text-sm">日期</label><input type="date" id="modal-date" class="mt-1 block w-full rounded-md border-gray-300"></div>
          <div><label for="modal-time" class="text-sm">時間 (HH:mm)</label><input type="time" id="modal-time" class="mt-1 block w-full rounded-md border-gray-300"></div>
          <div><label for="modal-event-type" class="text-sm">事件</label><select id="modal-event-type" class="mt-1 block w-full rounded-md border-gray-300"><option value="上班">上班</option><option value="下班">下班</option></select></div>
        </div>
        <div class="mt-6 flex justify-end space-x-2">
          <button id="modal-cancel-btn" class="px-4 py-2 bg-gray-200 rounded-md">取消</button>
          <button id="modal-submit-btn" class="px-4 py-2 bg-blue-600 text-white rounded-md">送出</button>
        </div>
      </div>
    </div>

<script>
    const API_BASE_URL = 'https://script.google.com/macros/s/AKfycbwbEVAfoO9eRzcUSfESIwih1Poub657h_9jz5UcqTXbxsDQOZ3mjLm1nHZfn_WM2K8/exec';
    let map;
    let markers = [];

    function initGoogleMap() {
        const centerPoint = { lat: 22.997, lng: 120.211 };
        map = new google.maps.Map(document.getElementById("map"), {
            zoom: 12,
            center: centerPoint,
        });
    }

    function handleMapError() {
        console.error("Google Maps API 金鑰驗證失敗。");
        const mapDiv = document.getElementById("map");
        if(mapDiv) {
            mapDiv.innerHTML = `
                <div class="map-error-overlay h-full">
                    <div>
                        <p class="font-semibold">無法載入地圖</p>
                        <p class="text-sm mt-1">Google Maps API 金鑰無效或設定錯誤，請聯繫系統管理員檢查後台設定。</p>
                    </div>
                </div>
            `;
        }
    }
    
    function loadJsonp(url) {
        return new Promise((resolve, reject) => {
            const cb = 'jsonp_' + Math.random().toString(36).slice(2);
            const timer = setTimeout(() => { cleanup(); reject(new Error('請求後端資料超時 (15秒)。')); }, 15000);
            function cleanup(){ clearTimeout(timer); delete window[cb]; if(script.parentNode) script.parentNode.removeChild(script); }
            window[cb] = (data) => { cleanup(); resolve(data); };
            const script = document.createElement('script');
            script.src = url + (url.includes('?') ? '&' : '?') + 'callback=' + cb;
            script.onerror = () => { cleanup(); reject(new Error('載入後端資料失敗。')); };
            document.body.appendChild(script);
        });
    }

    document.addEventListener('DOMContentLoaded', () => {
        const today = new Date();
        const todayStr = today.toLocaleDateString('sv'); // 'sv' format is yyyy-mm-dd
        document.getElementById('start-date').value = todayStr;
        document.getElementById('end-date').value = todayStr;

        loadJsonp(`${API_BASE_URL}?page=attendance_api&action=get_employees`)
            .then(employees => {
                const select = document.getElementById('employee-select');
                const modalSelect = document.getElementById('modal-employee-select');
                employees.forEach(emp => {
                    const option = `<option value="${emp.userId}">${emp.userName}</option>`;
                    select.innerHTML += option;
                    modalSelect.innerHTML += option;
                });
            });

        document.getElementById('query-btn').onclick = fetchReportData;
        document.getElementById('add-checkin-btn').onclick = () => document.getElementById('checkin-modal').classList.add('is-open');
        document.getElementById('modal-cancel-btn').onclick = () => document.getElementById('checkin-modal').classList.remove('is-open');
        document.getElementById('modal-submit-btn').onclick = handleManualCheckinSubmit;
    });

    function fetchReportData() {
        const startDate = document.getElementById('start-date').value;
        const endDate = document.getElementById('end-date').value;
        const userId = document.getElementById('employee-select').value;
        const spinner = document.getElementById('loading-spinner');
        
        spinner.style.display = 'block';
        document.getElementById('report-table-container').innerHTML = '';
        document.getElementById('map-container').style.display = 'none';

        const params = new URLSearchParams({ page: 'attendance_api', startDate, endDate, userId });
        loadJsonp(`${API_BASE_URL}?${params.toString()}`)
            .then(data => {
                spinner.style.display = 'none';
                renderSummary(data.summary);
                renderReportTable(data.records);
                if (userId && data.records[userId] && data.records[userId].mapPoints.length > 0) {
                    updateMap(data.records[userId].mapPoints);
                }
            });
    }
    
    function handleManualCheckinSubmit() {
        const payload = {
            action: 'add_manual_checkin',
            userId: document.getElementById('modal-employee-select').value,
            date: document.getElementById('modal-date').value,
            time: document.getElementById('modal-time').value,
            eventType: document.getElementById('modal-event-type').value,
        };
        fetch(`${API_BASE_URL}?page=attendance_api`, {
            method: 'POST', body: JSON.stringify(payload),
            headers: { 'Content-Type': 'text/plain;charset=utf-8' }, mode: 'no-cors'
        }).then(() => {
            alert('補打卡請求已送出！');
            document.getElementById('checkin-modal').classList.remove('is-open');
            fetchReportData();
        }).catch(err => alert('送出失敗: ' + err));
    }

    function renderSummary(summary) {
        document.getElementById('summary-section').style.display = 'grid';
        document.getElementById('total-late').textContent = summary.totalLateMinutes || 0;
        document.getElementById('total-early').textContent = summary.totalEarlyMinutes || 0;
        
        const absentCard = document.getElementById('absent-summary');
        const startDate = new Date(document.getElementById('start-date').value);
        const endDate = new Date(document.getElementById('end-date').value);
        if (startDate.getDate() === 1 && endDate.getDate() === new Date(endDate.getFullYear(), endDate.getMonth() + 1, 0).getDate()) {
            absentCard.style.display = 'block';
            document.getElementById('total-absent').textContent = summary.totalAbsentDays || 0;
        } else {
            absentCard.style.display = 'none';
        }
    }

    function renderReportTable(records) {
        const container = document.getElementById('report-table-container');
        let html = '<div class="overflow-x-auto"><table class="min-w-full divide-y divide-gray-200">';
        html += '<thead class="bg-gray-50"><tr><th>員工姓名</th><th>日期</th><th>上班</th><th>下班</th><th>狀態</th><th>遲到(分)</th><th>早退(分)</th></tr></thead><tbody class="bg-white divide-y divide-gray-200">';

        for (const userId in records) {
            const userData = records[userId];
            const dailyData = userData.dailyData;
            for (const date in dailyData) {
                const day = dailyData[date];
                html += `<tr><td>${userData.userName}</td><td>${date}</td><td>${day.checkIn || '---'}</td><td>${day.checkOut || '---'}</td><td>${day.status}</td><td>${day.late}</td><td>${day.early}</td></tr>`;
            }
        }
        
        html += '</tbody></table></div>';
        container.innerHTML = html;
    }

    function updateMap(points) {
        const mapContainer = document.getElementById('map-container');
        if (!map || !points || points.length === 0) {
            mapContainer.style.display = 'none';
            return;
        }
        mapContainer.style.display = 'block';

        markers.forEach(marker => marker.setMap(null));
        markers = [];

        const bounds = new google.maps.LatLngBounds();
        points.forEach(point => {
            const marker = new google.maps.Marker({ position: point, map: map });
            markers.push(marker);
            bounds.extend(point);
        });

        map.fitBounds(bounds);
        if (points.length === 1) map.setZoom(15);
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<?= getGoogleMapsApiKey_() ?>&libraries=marker&callback=initGoogleMap" async defer onerror="handleMapError()"></script>
</body>
</html>

